events {

}

http {

    log_format compression '$remote_addr - $remote_user [$time_local] '
                           '"$request" $status $body_bytes_sent '
                           '"$http_referer" "$http_user_agent" "$gzip_ratio"';

    error_log /etc/nginx/error_log.log warn;

    server {
        root /usr/share/nginx/html;
        +        listen 443 ssl;
        +       server_name 142.93.164.106;
        +        ssl_certificate /etc/nginx/server.crt;
        +       ssl_certificate_key /etc/nginx/server.key;
        +       # from https://cipherli.st/
        # and https://raymii.org/s/tutorials/Strong_SSL_Security_On_nginx.html
        #ssl_protocols TLSv1 TLSv1.1 TLSv1.2;
        #ssl_prefer_server_ciphers on;
        #ssl_ciphers "EECDH+AESGCM:EDH+AESGCM:AES256+EECDH:AES256+EDH";
        #ssl_ecdh_curve secp384r1;
        #ssl_session_cache shared:SSL:10m;
        #ssl_session_tickets off;
        #ssl_stapling on;
        #ssl_stapling_verify on;
        #resolver 8.8.8.8 8.8.4.4 valid=300s;
        #resolver_timeout 5s;
        # Disable preloading HSTS for now.  You can use the commented out header line that includes
        # the "preload" directive if you understand the implications.
        #add_header Strict-Transport-Security "max-age=63072000; includeSubdomains; preload";
        #add_header Strict-Transport-Security "max-age=63072000; includeSubdomains";
        #add_header X-Frame-Options DENY;
        #add_header X-Content-Type-Options nosniff;

        ssl_dhparam /etc/nginx/dhparam.pem;

        charset utf-8;
        gzip on;
        access_log /etc/nginx/nginx-access.log compression;

        location / {
            try_files $uri /index.html;
        }

        location /test {
            proxy_pass https://google.com;
        }

        location /api {
            proxy_pass http://api:8080/api;
            proxy_set_header Host $host:$server_port;
            proxy_set_header X-Forwarded-Host $server_name;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        }

        location /auth {
            proxy_pass http://idp:8080/auth;
            proxy_set_header    Host               $host;
            proxy_set_header    X-Real-IP          $remote_addr;
            proxy_set_header    X-Forwarded-For    $proxy_add_x_forwarded_for;
            proxy_set_header    X-Forwarded-Host   $host;
            proxy_set_header    X-Forwarded-Server $host;
            proxy_set_header    X-Forwarded-Port   $server_port;
            proxy_set_header    X-Forwarded-Proto  $scheme;
        }
    }
}